taskKey="com.javarush.games.racer.part02"\n\nИгра Racer (2/28)

Теперь подготовим игровое поле.
В этой части создадим переменные и методы, с помощью которых в будущем отрисуем дорогу и дорожную разметку.
По центру дороги будет расположена разделительная полоса.
Значение ее координаты по оси x равно половине ширины игрового поля и хранится в переменной CENTER_X.
По бокам будет расположена обочина. Ее ширина равна 14 и хранится в переменной ROADSIDE_WIDTH.

Создадим вспомогательные методы:
createGame() - для старта новой игры;
drawScene() - для отрисовки всех игровых объектов;
drawField() - для отрисовки фона игрового поля.


Требования:
1.	В классе RacerGame должно существовать публичное статическое final int поле CENTER_X, проинициализированное при объявлении значением WIDTH / 2.
2.	В классе RacerGame должно существовать публичное статическое final int поле ROADSIDE_WIDTH, проинициализированное при объявлении значением 14.
3.	В классе RacerGame должен существовать приватный метод void createGame().
4.	В классе RacerGame должен существовать приватный метод void drawScene().
5.	В методе createGame() должен быть вызван метод drawScene().
6.	В методе initialize() должен быть вызван метод createGame().
7.	В методе initialize() вызов метода createGame() должен быть после вызова метода setScreenSize(int, int).
8.	В классе RacerGame должен существовать приватный метод void drawField().
9.	В методе drawScene() должен быть вызван метод drawField().


Игра Racer (2/28)

Теперь подготовим игровое поле.
В этой части создадим переменные и методы, с помощью которых в будущем отрисуем дорогу и дорожную разметку.
По центру дороги будет расположена разделительная полоса.
Значение ее координаты по оси x равно половине ширины игрового поля и хранится в переменной CENTER_X.
По бокам будет расположена обочина. Ее ширина равна 14 и хранится в переменной ROADSIDE_WIDTH.

Создадим вспомогательные методы:
createGame() - для старта новой игры;
drawScene() - для отрисовки всех игровых объектов;
drawField() - для отрисовки фона игрового поля.



